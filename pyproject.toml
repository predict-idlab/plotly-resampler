[tool.poetry]
name = "plotly-resampler"  # Do not forget to update the __init__.py __version__ variable
version = "0.11.0rc0"
description = "Visualizing large time series with plotly"
authors = ["Jonas Van Der Donckt", "Jeroen Van Der Donckt", "Emiel Deprost"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/predict-idlab/plotly-resampler"
documentation = "https://predict-idlab.github.io/plotly-resampler/latest"
keywords = ["time-series", "visualization", "resampling", "plotly", "plotly-dash"]
packages = [
    { include = "plotly_resampler" }
]
include = [
    # C extensions must be included in the wheel distributions
    {path = "plotly_resampler/aggregation/algorithms/*.so", format = "wheel"},
    {path = "plotly_resampler/aggregation/algorithms/*.pyd", format = "wheel"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

[tool.poetry.dependencies]
python = "^3.8"
plotly = ">=5.5.0,<7.0.0"
dash = ">=2.11.0"  # from dash 2.11, jupyter support is included
pandas =[
    { version = ">=1", python = "<3.13" },
    { version = ">=2.2.3", python = ">=3.13" }
] 
numpy = [
    { version = ">=1.14", python = "<3.11" },
    { version = ">=1.24", python = ">=3.11,<3.13" },
    { version = ">=2.0", python = ">=3.13" }
]
orjson = "^3.10.0"  # Faster json serialization (from 3.10 onwards f16 is supported)
# Optional dependencies
Flask-Cors = { version = "^4.0.2", optional = true }
# Lock kaleido dependency until https://github.com/plotly/Kaleido/issues/156 is resolved
kaleido = {version = "0.2.1", optional = true}
tsdownsample = ">=0.1.3"

[tool.poetry.extras]
# Optional dependencies
inline_persistent = ["kaleido", "Flask-Cors"]

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
pytest-cov = "^3.0.0"
selenium = "4.2.0"
pytest-selenium = "^2.0.1"
blinker= "1.7.0"   # we need version 1.7.0  (otherwise we get a blinker._saferef module not found error
selenium-wire = "^5.0"
pyarrow = [
    {version = ">=15.0", python = "<3.13"},
    {version = ">=18.0", python = ">=3.13"},
]
ipywidgets = "^7.7.1" # needs to be v7 in order to support serialization
memory-profiler = "^0.60.0"
line-profiler = "^4.0"
ruff = "^0.0.262"
black = "^24.3.0"
pytest-lazy-fixture = "^0.6.3"
# yep = "^0.4"  # c code profiling
mkdocs = "^1.5.3"
mkdocstrings = "^0.20.0"
mkdocstrings-python = "^1.7.3"
griffe = ">=0.32.0" 
mkdocs-gen-files = "^0.5.0"
mike = "^1.1.2"
mkdocs-material = "^9.1.18"
mkdocs-literate-nav = "^0.6.0"
mkdocs-section-index = "^0.3.5"
cffi = ">=1.16"
anywidget = "^0.9.13"

# Linting
[tool.ruff]
select = ["E", "F", "I"]
line-length = 88
ignore = ["E501"] # Never enforce `E501` (line length violations).
[tool.ruff.per-file-ignores]
"tests/test_registering.py" = ["F401", "F811"]
"tests/test_serialization.py" = ["F401", "F811"]

# Formatting
[tool.black]
line-length = 88

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
